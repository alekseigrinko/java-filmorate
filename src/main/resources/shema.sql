CREATE TABLE IF NOT EXISTS USERS
(
    USER_ID  INT PRIMARY KEY AUTO_INCREMENT,
    EMAIL    VARCHAR(255) NOT NULL,
    LOGIN    VARCHAR(255) NOT NULL,
    NAME     VARCHAR(255) NOT NULL,
    BIRTHDAY DATE
);

CREATE TABLE IF NOT EXISTS MPA_RATINGS
(
    MPA_RATING_ID  INT PRIMARY KEY AUTO_INCREMENT,
    NAME     VARCHAR(255) NOT NULL
);

CREATE TABLE IF NOT EXISTS GENRES
(
    GENRE_ID  INT PRIMARY KEY AUTO_INCREMENT,
    NAME     VARCHAR(255) NOT NULL
);

CREATE TABLE IF NOT EXISTS FILMS
(
    FILM_ID  INT PRIMARY KEY AUTO_INCREMENT,
    NAME    VARCHAR(255) NOT NULL,
    DESCRIPTION    VARCHAR(255) NOT NULL,
    RELEASE_DATE DATE,
    DURATION INT,
    MPA_RATING INT REFERENCES MPA_RATINGS(MPA_RATING_ID)
);

CREATE TABLE IF NOT EXISTS FILM_GENRES
(
    FILM_GENRES_ID  INT PRIMARY KEY AUTO_INCREMENT,
    FILM_ID  INT REFERENCES FILMS(FILM_ID),
    GENRE_ID INT REFERENCES GENRES(GENRE_ID)
);

CREATE TABLE IF NOT EXISTS FILM_LIKES
(
    FILM_LIKE_ID  INT PRIMARY KEY AUTO_INCREMENT,
    FILM_ID  INT REFERENCES FILMS(FILM_ID),
    USER_ID INT REFERENCES USERS(USER_ID)
);

CREATE TABLE IF NOT EXISTS FRIENDSHIP_STATUSES
(
    FRIENDSHIP_STATUSES_ID  INT PRIMARY KEY AUTO_INCREMENT,
    NAME    VARCHAR(255) NOT NULL
);

CREATE TABLE IF NOT EXISTS FRIENDSHIPS
(
    FRIENDSHIP_ID  INT PRIMARY KEY AUTO_INCREMENT,
    USER_ID INT REFERENCES USERS(USER_ID),
    FRIEND_ID INT REFERENCES USERS(USER_ID),
    FRIENDSHIP_STATUSES_ID INT REFERENCES FRIENDSHIP_STATUSES(FRIENDSHIP_STATUSES_ID)
);



